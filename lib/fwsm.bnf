#include :: "ip.bnf"
#include :: "acl.bnf"

grammar
    =
    @:{command}+ $
    ;

version
	= version:?/ASA Version [^\n]*/? NL
	| version:?/FWSM Version [^\n]*/? NL
	;

command
	= version
	| hostname
	| domain_name
	| interface
	| name
	| time_range
	| object
	| object_group
	| access_list
	| {access_list_remark}+
	| access_group
	| ignored
	| unmatched NL
	;

interface_detail
	= type:"description" WS value:TOEOL NL
	| type:"nameif" WS value:identifier [WS] NL
	| type:("ip" WS "address") WS value:(ip4 WS ip4) WS "standby" WS standby:ip4 NL
	| type:("ipv6" WS "address") WS value:(ip6 "/" int) WS "standby" WS standby:ip6 NL
	| TOEOL NL
	| ()
	;


name
	= "name" WS address:(ip4|ip6) WS hostname:identifier [WS "description" description:?/[^\n]+/?] NL
	;

access_list_rule_extended
	= "access-list" WS id:acl_id WS extended:acl_extended WS mode:acl_mode WS protocol:protocol_icmp WS source:acl_icmp_node WS dest:acl_icmp_node icmp:acl_icmp_options [WS options:acl_options] [WS] NL
	| "access-list" WS id:acl_id WS extended:acl_extended WS mode:acl_mode WS protocol:acl_protocol WS source:node WS dest:node [WS options:acl_options] [WS] NL
	| "access-list" WS id:acl_id WS protocol:"ethertype" TOEOL NL
	;

(* access-list access_list_name standard {deny | permit} {any | ip_address mask} *)
access_list_rule_standard
    = "access-list" WS id:acl_id WS "standard" WS mode:acl_mode WS source:acl_host [WS]
    ;

access_list
	= remark:{access_list_remark}+ >access_list_rule_extended
	| >access_list_rule_extended
	| remark:{access_list_remark}+ >access_list_rule_standard
	| >access_list_rule_standard
	;


access_list_remark
	= 'access-list' WS acl_id WS 'remark' SP remark:remark NL
	;

access_group
	= "access-group" WS name:obj_name WS direction:obj_name WS type:"interface" WS iface:obj_name [WS] NL
	| "access-group" WS name:obj_name WS type:"global" [WS] NL
	;

ignored_indent
	= {[NL] /^ [^\n]*/ NL}*
	;

ignored
	=  ":" TOEOL NL
	| "!" TOEOL NL
	| "aaa-server" WS TOEOL NL ignored_indent
	| "aaa" WS TOEOL NL
	| "arp-inspection" WS TOEOL NL
	| "arp" WS TOEOL NL
	| "asdm" WS TOEOL NL
	| "auth-prompt" WS TOEOL NL
	| "boot" TOEOL NL
	| "call-home" TOEOL NL ignored_indent
	| "class-map" WS TOEOL NL ignored_indent
	| "clock" TOEOL NL
	| "console" WS TOEOL NL
	| "Cryptochecksum:" TOEOL NL
	| "crypto" WS TOEOL NL ignored_indent
	| "dhcpd" WS TOEOL NL
	| "dhcprelay" WS TOEOL NL
	| "dns-guard" TOEOL NL
	| "dns" TOEOL NL ignored_indent
	| "dynamic-access-policy-record" WS TOEOL NL
	| "enable"  TOEOL NL
	| "eou" WS TOEOL NL
	| "established" WS TOEOL NL
	| "failover" [WS TOEOL] NL
	| "firewall" TOEOL NL
	| "fragment" TOEOL NL
	| "ftp" TOEOL NL
	| "global" WS TOEOL NL
	| "group-policy" WS TOEOL NL ignored_indent
	| "hpm" TOEOL NL
	| "http" WS TOEOL NL
	| "icmp" WS TOEOL NL
	| "ipv6" WS TOEOL NL
	| "ip" WS TOEOL NL
	| "logging" WS TOEOL NL
	| "mac-address-table" TOEOL NL
	| "mac-address" TOEOL NL
	| "monitor-interface" WS TOEOL NL
	| "mtu" WS TOEOL NL
	| "multicast-routing" TOEOL NL
	| "nac-policy" TOEOL NL ignored_indent
	| "names" NL
	| "nat-control" [WS] TOEOL NL
	| "nat" WS TOEOL NL
	| "no" TOEOL NL
	| "ntp" WS TOEOL NL
	| "pager" WS TOEOL NL
	| "passwd" TOEOL NL
	| "policy-map" WS TOEOL NL ignored_indent
	| "privilege" WS TOEOL NL
	| "prompt" WS TOEOL NL
	| "resource" TOEOL NL
	| "router" WS TOEOL NL ignored_indent
	| "route" WS TOEOL NL
	| "same-security-traffic"  TOEOL NL
	| "service-policy" WS TOEOL NL
	| "service" WS TOEOL NL
	| "snmp-map" WS TOEOL NL ignored_indent
	| "snmp-server" WS TOEOL NL
	| "smtp-server" WS TOEOL NL
	| "ssh" WS TOEOL NL
	| "ssl" WS TOEOL NL
	| "static" WS TOEOL NL
	| "sysopt" WS TOEOL NL
	| "tcp-map" WS TOEOL NL ignored_indent
	| "telnet" WS TOEOL NL
	| "terminal" WS TOEOL NL
	| "tftp-server" WS TOEOL NL
	| "threat-detection" WS TOEOL NL
	| "timeout" WS TOEOL NL
	| "tls-proxy" WS TOEOL NL
	| "tunnel-group-map" WS TOEOL NL
	| "tunnel-group" WS TOEOL NL ignored_indent
	| "user-identity" WS TOEOL NL
	| "username" WS TOEOL NL ignored_indent
	| "virtual" TOEOL NL
	| "vpn-group-policy" TOEOL NL
	| "vpn" TOEOL NL ignored_indent
	| "webvpn" TOEOL NL ignored_indent
	| "xlate-bypass" [WS] TOEOL NL
	| "xlate" WS TOEOL NL
	;

unmatched
	= ()
	;
